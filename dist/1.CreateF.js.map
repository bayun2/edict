{"version":3,"sources":["webpack:///1.CreateF.js","webpack:///./~/isomorphic-fetch/fetch-npm-browserify.js","webpack:///./~/whatwg-fetch/fetch.js","webpack:///./src/routes/CreateF/components/index.js"],"names":["webpackJsonp","29","module","exports","__webpack_require__","self","fetch","bind","34","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","support","iterable","Symbol","Headers","headers","this","map","forEach","append","Object","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","chars","Array","length","i","fromCharCode","join","bufferClone","slice","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","Blob","prototype","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","toString","arrayBuffer","isDataView","_bodyArrayBuffer","ArrayBuffer","isArrayBufferView","Error","get","type","rejected","then","text","decode","json","JSON","parse","normalizeMethod","method","upcased","toUpperCase","methods","indexOf","Request","input","options","url","credentials","mode","referrer","form","trim","split","bytes","replace","decodeURIComponent","parseHeaders","rawHeaders","line","parts","key","Response","bodyInit","status","ok","statusText","e","viewClasses","obj","DataView","isView","call","oldValue","has","hasOwnProperty","callback","thisArg","keys","push","values","entries","clone","response","redirectStatuses","redirect","RangeError","location","init","request","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill","132","_interopRequireWildcard","__esModule","newObj","default","_interopRequireDefault","_classCallCheck","instance","Constructor","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_createClass","defineProperties","target","props","descriptor","defineProperty","protoProps","staticProps","_react","_react2","_reactRouter","ReactRouter","_isomorphicFetch","_isomorphicFetch2","browserHistory","CreateD","_React$Component","_this","getPrototypeOf","funcName","reply","window","apiPath","apiSuffix","Content-type","msg","msgId","setState","image","shareUrl","addParam","catch","replyEdict","top","innerWidth","adImgHeight","createElement","className","src","curImage","style","onClick","refuse","height","Component","defaultProps","propTypes","PropTypes","func","string","headimgurl","nickname","openId","number","sourceHeadimgurl","sourceMsg","sourceNickName","sourceOpenId"],"mappings":"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","file":"1.CreateF.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 29:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// the whatwg-fetch polyfill installs the fetch() function\n\t// on the global object (window or self)\n\t//\n\t// Return that as the export for use in Webpack, Browserify etc.\n\t__webpack_require__(34);\n\tmodule.exports = self.fetch.bind(self);\n\n\n/***/ },\n\n/***/ 34:\n/***/ function(module, exports) {\n\n\t(function(self) {\n\t  'use strict';\n\t\n\t  if (self.fetch) {\n\t    return\n\t  }\n\t\n\t  var support = {\n\t    searchParams: 'URLSearchParams' in self,\n\t    iterable: 'Symbol' in self && 'iterator' in Symbol,\n\t    blob: 'FileReader' in self && 'Blob' in self && (function() {\n\t      try {\n\t        new Blob()\n\t        return true\n\t      } catch(e) {\n\t        return false\n\t      }\n\t    })(),\n\t    formData: 'FormData' in self,\n\t    arrayBuffer: 'ArrayBuffer' in self\n\t  }\n\t\n\t  if (support.arrayBuffer) {\n\t    var viewClasses = [\n\t      '[object Int8Array]',\n\t      '[object Uint8Array]',\n\t      '[object Uint8ClampedArray]',\n\t      '[object Int16Array]',\n\t      '[object Uint16Array]',\n\t      '[object Int32Array]',\n\t      '[object Uint32Array]',\n\t      '[object Float32Array]',\n\t      '[object Float64Array]'\n\t    ]\n\t\n\t    var isDataView = function(obj) {\n\t      return obj && DataView.prototype.isPrototypeOf(obj)\n\t    }\n\t\n\t    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n\t      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n\t    }\n\t  }\n\t\n\t  function normalizeName(name) {\n\t    if (typeof name !== 'string') {\n\t      name = String(name)\n\t    }\n\t    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n\t      throw new TypeError('Invalid character in header field name')\n\t    }\n\t    return name.toLowerCase()\n\t  }\n\t\n\t  function normalizeValue(value) {\n\t    if (typeof value !== 'string') {\n\t      value = String(value)\n\t    }\n\t    return value\n\t  }\n\t\n\t  // Build a destructive iterator for the value list\n\t  function iteratorFor(items) {\n\t    var iterator = {\n\t      next: function() {\n\t        var value = items.shift()\n\t        return {done: value === undefined, value: value}\n\t      }\n\t    }\n\t\n\t    if (support.iterable) {\n\t      iterator[Symbol.iterator] = function() {\n\t        return iterator\n\t      }\n\t    }\n\t\n\t    return iterator\n\t  }\n\t\n\t  function Headers(headers) {\n\t    this.map = {}\n\t\n\t    if (headers instanceof Headers) {\n\t      headers.forEach(function(value, name) {\n\t        this.append(name, value)\n\t      }, this)\n\t\n\t    } else if (headers) {\n\t      Object.getOwnPropertyNames(headers).forEach(function(name) {\n\t        this.append(name, headers[name])\n\t      }, this)\n\t    }\n\t  }\n\t\n\t  Headers.prototype.append = function(name, value) {\n\t    name = normalizeName(name)\n\t    value = normalizeValue(value)\n\t    var oldValue = this.map[name]\n\t    this.map[name] = oldValue ? oldValue+','+value : value\n\t  }\n\t\n\t  Headers.prototype['delete'] = function(name) {\n\t    delete this.map[normalizeName(name)]\n\t  }\n\t\n\t  Headers.prototype.get = function(name) {\n\t    name = normalizeName(name)\n\t    return this.has(name) ? this.map[name] : null\n\t  }\n\t\n\t  Headers.prototype.has = function(name) {\n\t    return this.map.hasOwnProperty(normalizeName(name))\n\t  }\n\t\n\t  Headers.prototype.set = function(name, value) {\n\t    this.map[normalizeName(name)] = normalizeValue(value)\n\t  }\n\t\n\t  Headers.prototype.forEach = function(callback, thisArg) {\n\t    for (var name in this.map) {\n\t      if (this.map.hasOwnProperty(name)) {\n\t        callback.call(thisArg, this.map[name], name, this)\n\t      }\n\t    }\n\t  }\n\t\n\t  Headers.prototype.keys = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push(name) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.values = function() {\n\t    var items = []\n\t    this.forEach(function(value) { items.push(value) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.entries = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push([name, value]) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  if (support.iterable) {\n\t    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n\t  }\n\t\n\t  function consumed(body) {\n\t    if (body.bodyUsed) {\n\t      return Promise.reject(new TypeError('Already read'))\n\t    }\n\t    body.bodyUsed = true\n\t  }\n\t\n\t  function fileReaderReady(reader) {\n\t    return new Promise(function(resolve, reject) {\n\t      reader.onload = function() {\n\t        resolve(reader.result)\n\t      }\n\t      reader.onerror = function() {\n\t        reject(reader.error)\n\t      }\n\t    })\n\t  }\n\t\n\t  function readBlobAsArrayBuffer(blob) {\n\t    var reader = new FileReader()\n\t    var promise = fileReaderReady(reader)\n\t    reader.readAsArrayBuffer(blob)\n\t    return promise\n\t  }\n\t\n\t  function readBlobAsText(blob) {\n\t    var reader = new FileReader()\n\t    var promise = fileReaderReady(reader)\n\t    reader.readAsText(blob)\n\t    return promise\n\t  }\n\t\n\t  function readArrayBufferAsText(buf) {\n\t    var view = new Uint8Array(buf)\n\t    var chars = new Array(view.length)\n\t\n\t    for (var i = 0; i < view.length; i++) {\n\t      chars[i] = String.fromCharCode(view[i])\n\t    }\n\t    return chars.join('')\n\t  }\n\t\n\t  function bufferClone(buf) {\n\t    if (buf.slice) {\n\t      return buf.slice(0)\n\t    } else {\n\t      var view = new Uint8Array(buf.byteLength)\n\t      view.set(new Uint8Array(buf))\n\t      return view.buffer\n\t    }\n\t  }\n\t\n\t  function Body() {\n\t    this.bodyUsed = false\n\t\n\t    this._initBody = function(body) {\n\t      this._bodyInit = body\n\t      if (!body) {\n\t        this._bodyText = ''\n\t      } else if (typeof body === 'string') {\n\t        this._bodyText = body\n\t      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n\t        this._bodyBlob = body\n\t      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n\t        this._bodyFormData = body\n\t      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t        this._bodyText = body.toString()\n\t      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n\t        this._bodyArrayBuffer = bufferClone(body.buffer)\n\t        // IE 10-11 can't handle a DataView body.\n\t        this._bodyInit = new Blob([this._bodyArrayBuffer])\n\t      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n\t        this._bodyArrayBuffer = bufferClone(body)\n\t      } else {\n\t        throw new Error('unsupported BodyInit type')\n\t      }\n\t\n\t      if (!this.headers.get('content-type')) {\n\t        if (typeof body === 'string') {\n\t          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n\t        } else if (this._bodyBlob && this._bodyBlob.type) {\n\t          this.headers.set('content-type', this._bodyBlob.type)\n\t        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n\t        }\n\t      }\n\t    }\n\t\n\t    if (support.blob) {\n\t      this.blob = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return Promise.resolve(this._bodyBlob)\n\t        } else if (this._bodyArrayBuffer) {\n\t          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as blob')\n\t        } else {\n\t          return Promise.resolve(new Blob([this._bodyText]))\n\t        }\n\t      }\n\t\n\t      this.arrayBuffer = function() {\n\t        if (this._bodyArrayBuffer) {\n\t          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n\t        } else {\n\t          return this.blob().then(readBlobAsArrayBuffer)\n\t        }\n\t      }\n\t    }\n\t\n\t    this.text = function() {\n\t      var rejected = consumed(this)\n\t      if (rejected) {\n\t        return rejected\n\t      }\n\t\n\t      if (this._bodyBlob) {\n\t        return readBlobAsText(this._bodyBlob)\n\t      } else if (this._bodyArrayBuffer) {\n\t        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n\t      } else if (this._bodyFormData) {\n\t        throw new Error('could not read FormData body as text')\n\t      } else {\n\t        return Promise.resolve(this._bodyText)\n\t      }\n\t    }\n\t\n\t    if (support.formData) {\n\t      this.formData = function() {\n\t        return this.text().then(decode)\n\t      }\n\t    }\n\t\n\t    this.json = function() {\n\t      return this.text().then(JSON.parse)\n\t    }\n\t\n\t    return this\n\t  }\n\t\n\t  // HTTP methods whose capitalization should be normalized\n\t  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\t\n\t  function normalizeMethod(method) {\n\t    var upcased = method.toUpperCase()\n\t    return (methods.indexOf(upcased) > -1) ? upcased : method\n\t  }\n\t\n\t  function Request(input, options) {\n\t    options = options || {}\n\t    var body = options.body\n\t\n\t    if (typeof input === 'string') {\n\t      this.url = input\n\t    } else {\n\t      if (input.bodyUsed) {\n\t        throw new TypeError('Already read')\n\t      }\n\t      this.url = input.url\n\t      this.credentials = input.credentials\n\t      if (!options.headers) {\n\t        this.headers = new Headers(input.headers)\n\t      }\n\t      this.method = input.method\n\t      this.mode = input.mode\n\t      if (!body && input._bodyInit != null) {\n\t        body = input._bodyInit\n\t        input.bodyUsed = true\n\t      }\n\t    }\n\t\n\t    this.credentials = options.credentials || this.credentials || 'omit'\n\t    if (options.headers || !this.headers) {\n\t      this.headers = new Headers(options.headers)\n\t    }\n\t    this.method = normalizeMethod(options.method || this.method || 'GET')\n\t    this.mode = options.mode || this.mode || null\n\t    this.referrer = null\n\t\n\t    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n\t      throw new TypeError('Body not allowed for GET or HEAD requests')\n\t    }\n\t    this._initBody(body)\n\t  }\n\t\n\t  Request.prototype.clone = function() {\n\t    return new Request(this, { body: this._bodyInit })\n\t  }\n\t\n\t  function decode(body) {\n\t    var form = new FormData()\n\t    body.trim().split('&').forEach(function(bytes) {\n\t      if (bytes) {\n\t        var split = bytes.split('=')\n\t        var name = split.shift().replace(/\\+/g, ' ')\n\t        var value = split.join('=').replace(/\\+/g, ' ')\n\t        form.append(decodeURIComponent(name), decodeURIComponent(value))\n\t      }\n\t    })\n\t    return form\n\t  }\n\t\n\t  function parseHeaders(rawHeaders) {\n\t    var headers = new Headers()\n\t    rawHeaders.split('\\r\\n').forEach(function(line) {\n\t      var parts = line.split(':')\n\t      var key = parts.shift().trim()\n\t      if (key) {\n\t        var value = parts.join(':').trim()\n\t        headers.append(key, value)\n\t      }\n\t    })\n\t    return headers\n\t  }\n\t\n\t  Body.call(Request.prototype)\n\t\n\t  function Response(bodyInit, options) {\n\t    if (!options) {\n\t      options = {}\n\t    }\n\t\n\t    this.type = 'default'\n\t    this.status = 'status' in options ? options.status : 200\n\t    this.ok = this.status >= 200 && this.status < 300\n\t    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n\t    this.headers = new Headers(options.headers)\n\t    this.url = options.url || ''\n\t    this._initBody(bodyInit)\n\t  }\n\t\n\t  Body.call(Response.prototype)\n\t\n\t  Response.prototype.clone = function() {\n\t    return new Response(this._bodyInit, {\n\t      status: this.status,\n\t      statusText: this.statusText,\n\t      headers: new Headers(this.headers),\n\t      url: this.url\n\t    })\n\t  }\n\t\n\t  Response.error = function() {\n\t    var response = new Response(null, {status: 0, statusText: ''})\n\t    response.type = 'error'\n\t    return response\n\t  }\n\t\n\t  var redirectStatuses = [301, 302, 303, 307, 308]\n\t\n\t  Response.redirect = function(url, status) {\n\t    if (redirectStatuses.indexOf(status) === -1) {\n\t      throw new RangeError('Invalid status code')\n\t    }\n\t\n\t    return new Response(null, {status: status, headers: {location: url}})\n\t  }\n\t\n\t  self.Headers = Headers\n\t  self.Request = Request\n\t  self.Response = Response\n\t\n\t  self.fetch = function(input, init) {\n\t    return new Promise(function(resolve, reject) {\n\t      var request = new Request(input, init)\n\t      var xhr = new XMLHttpRequest()\n\t\n\t      xhr.onload = function() {\n\t        var options = {\n\t          status: xhr.status,\n\t          statusText: xhr.statusText,\n\t          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n\t        }\n\t        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n\t        var body = 'response' in xhr ? xhr.response : xhr.responseText\n\t        resolve(new Response(body, options))\n\t      }\n\t\n\t      xhr.onerror = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.ontimeout = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.open(request.method, request.url, true)\n\t\n\t      if (request.credentials === 'include') {\n\t        xhr.withCredentials = true\n\t      }\n\t\n\t      if ('responseType' in xhr && support.blob) {\n\t        xhr.responseType = 'blob'\n\t      }\n\t\n\t      request.headers.forEach(function(value, name) {\n\t        xhr.setRequestHeader(name, value)\n\t      })\n\t\n\t      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n\t    })\n\t  }\n\t  self.fetch.polyfill = true\n\t})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ },\n\n/***/ 132:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(4);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactRouter = __webpack_require__(21);\n\t\n\tvar ReactRouter = _interopRequireWildcard(_reactRouter);\n\t\n\tvar _isomorphicFetch = __webpack_require__(29);\n\t\n\tvar _isomorphicFetch2 = _interopRequireDefault(_isomorphicFetch);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar browserHistory = ReactRouter.browserHistory;\n\t\n\tvar CreateD = function (_React$Component) {\n\t  _inherits(CreateD, _React$Component);\n\t\n\t  function CreateD(props) {\n\t    _classCallCheck(this, CreateD);\n\t\n\t    var _this = _possibleConstructorReturn(this, (CreateD.__proto__ || Object.getPrototypeOf(CreateD)).call(this, props));\n\t\n\t    _this.funcName = ['reply', 'refuse', 'replyEdict'];\n\t    _this.funcName.forEach(function (funcName) {\n\t      _this[funcName] = _this[funcName].bind(_this);\n\t    });\n\t    return _this;\n\t  }\n\t\n\t  _createClass(CreateD, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {}\n\t  }, {\n\t    key: 'componentWillUnmount',\n\t    value: function componentWillUnmount() {}\n\t  }, {\n\t    key: 'replyEdict',\n\t    value: function replyEdict(reply) {\n\t      var self = this;\n\t      (0, _isomorphicFetch2.default)(window.apiPath + '/add' + window.apiSuffix, {\n\t        credentials: 'include',\n\t        method: 'POST',\n\t        headers: {\n\t          'Content-type': 'application/x-www-form-urlencoded;charset=UTF-8'\n\t        },\n\t        body: 'reply=' + reply + '&msg=' + self.props.msg + '&msgId=' + self.props.msgId\n\t      }).then(function (response) {\n\t        return response.json();\n\t      }).then(function (json) {\n\t        self.props.setState({\n\t          image: json.image,\n\t          shareUrl: json.shareUrl,\n\t          reply: reply\n\t        }, function () {\n\t          var url = self.props.addParam('created');\n\t          browserHistory.push(url);\n\t        });\n\t      }).catch(function () {});\n\t    }\n\t  }, {\n\t    key: 'refuse',\n\t    value: function refuse() {\n\t      this.replyEdict(2);\n\t    }\n\t  }, {\n\t    key: 'reply',\n\t    value: function reply() {\n\t      var url = this.props.addParam('createb');\n\t      this.props.setState({\n\t        reply: 1\n\t      }, function () {\n\t        browserHistory.push(url);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var top = window.innerWidth * 832 / 640;\n\t      top = top + 'px';\n\t      var adImgHeight = 98 * window.innerWidth / 640;\n\t      adImgHeight = adImgHeight + 'px';\n\t      return _react2.default.createElement(\n\t        'div',\n\t        { className: 'replyb picwrap' },\n\t        _react2.default.createElement('img', { className: 'cutpic', src: this.props.curImage }),\n\t        _react2.default.createElement(\n\t          'div',\n\t          { className: 'btngroup', style: { top: top } },\n\t          _react2.default.createElement(\n\t            'div',\n\t            { className: 'btn a', onClick: this.reply },\n\t            '\\u590D\\u65E8'\n\t          ),\n\t          _react2.default.createElement(\n\t            'div',\n\t            { className: 'btn b', onClick: this.refuse },\n\t            '\\u6297\\u65E8'\n\t          )\n\t        ),\n\t        _react2.default.createElement('div', { className: 'ad', style: { height: adImgHeight } })\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return CreateD;\n\t}(_react2.default.Component);\n\t\n\tCreateD.defaultProps = {};\n\t\n\tCreateD.propTypes = {\n\t  addParam: _react2.default.PropTypes.func,\n\t  curImage: _react2.default.PropTypes.string,\n\t  headimgurl: _react2.default.PropTypes.string,\n\t  msg: _react2.default.PropTypes.string,\n\t  msgId: _react2.default.PropTypes.string,\n\t  nickname: _react2.default.PropTypes.string,\n\t  openId: _react2.default.PropTypes.string,\n\t  reply: _react2.default.PropTypes.number,\n\t  setState: _react2.default.PropTypes.func,\n\t  sourceHeadimgurl: _react2.default.PropTypes.string,\n\t  sourceMsg: _react2.default.PropTypes.string,\n\t  sourceNickName: _react2.default.PropTypes.string,\n\t  sourceOpenId: _react2.default.PropTypes.string,\n\t  status: _react2.default.PropTypes.string\n\t};\n\t\n\tmodule.exports = CreateD;\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// 1.CreateF.js","// the whatwg-fetch polyfill installs the fetch() function\n// on the global object (window or self)\n//\n// Return that as the export for use in Webpack, Browserify etc.\nrequire('whatwg-fetch');\nmodule.exports = self.fetch.bind(self);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/isomorphic-fetch/fetch-npm-browserify.js\n// module id = 29\n// module chunks = 1 2 3","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (typeof input === 'string') {\n      this.url = input\n    } else {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split('\\r\\n').forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/whatwg-fetch/fetch.js\n// module id = 34\n// module chunks = 1 2 3","import React from 'react';\nimport * as ReactRouter from 'react-router';\nimport fetch from 'isomorphic-fetch';\n\nconst {browserHistory} = ReactRouter;\n\nclass CreateD extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.funcName = ['reply', 'refuse', 'replyEdict'];\n    this.funcName.forEach(funcName => {\n      this[funcName] = this[funcName].bind(this);\n    });\n  }\n\n  componentDidMount() {\n\n  }\n\n  componentWillUnmount() {\n\n  }\n\n  replyEdict(reply) {\n    const self = this;\n    fetch(`${window.apiPath}/add${window.apiSuffix}`, {\n      credentials: 'include',\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/x-www-form-urlencoded;charset=UTF-8'\n      },\n      body: `reply=${reply}&msg=${self.props.msg}&msgId=${self.props.msgId}`\n    })\n      .then(response => response.json())\n      .then(json => {\n        self.props.setState({\n          image: json.image,\n          shareUrl: json.shareUrl,\n          reply\n        }, () => {\n          const url = self.props.addParam('created');\n          browserHistory.push(url);\n        });\n      })\n      .catch(() => {\n      });\n  }\n\n  refuse() {\n    this.replyEdict(2);\n  }\n\n  reply() {\n    const url = this.props.addParam('createb');\n    this.props.setState({\n      reply: 1\n    }, () => {\n      browserHistory.push(url);\n    });\n  }\n\n  render() {\n    let top = window.innerWidth*832/640;\n    top = `${top}px`;\n    let adImgHeight = 98*window.innerWidth/640;\n    adImgHeight = `${adImgHeight}px`;\n    return (\n        <div className=\"replyb picwrap\">\n          <img className=\"cutpic\" src={this.props.curImage} />\n          <div className=\"btngroup\" style={{top}}>\n            <div className=\"btn a\" onClick={this.reply}>复旨</div>\n            <div className=\"btn b\" onClick={this.refuse}>抗旨</div>\n          </div>\n          <div className=\"ad\" style={{height: adImgHeight}}></div>\n        </div>\n    );\n  }\n}\n\nCreateD.defaultProps = {\n\n};\n\nCreateD.propTypes = {\n  addParam: React.PropTypes.func,\n  curImage: React.PropTypes.string,\n  headimgurl: React.PropTypes.string,\n  msg: React.PropTypes.string,\n  msgId: React.PropTypes.string,\n  nickname: React.PropTypes.string,\n  openId: React.PropTypes.string,\n  reply: React.PropTypes.number,\n  setState: React.PropTypes.func,\n  sourceHeadimgurl: React.PropTypes.string,\n  sourceMsg: React.PropTypes.string,\n  sourceNickName: React.PropTypes.string,\n  sourceOpenId: React.PropTypes.string,\n  status: React.PropTypes.string\n};\n\nmodule.exports = CreateD;\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/CreateF/components/index.js"],"sourceRoot":""}