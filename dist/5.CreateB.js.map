{"version":3,"sources":["webpack:///5.CreateB.js","webpack:///./src/routes/CreateB/components/index.js","webpack:///./~/isomorphic-fetch/fetch-npm-browserify.js","webpack:///./~/whatwg-fetch/fetch.js"],"names":["webpackJsonp","126","module","exports","__webpack_require__","_interopRequireWildcard","obj","__esModule","newObj","key","Object","prototype","hasOwnProperty","call","default","_interopRequireDefault","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_createClass","defineProperties","target","props","i","length","descriptor","defineProperty","protoProps","staticProps","_react","_react2","_reactRouter","ReactRouter","_isomorphicFetch","_isomorphicFetch2","Link","browserHistory","CreateB","_React$Component","this","_this","getPrototypeOf","funcName","forEach","bind","event","msg","substr","setState","_this2","window","apiPath","apiSuffix","credentials","method","headers","Content-type","body","then","response","json","image","shareUrl","url","addParam","push","catch","reply","_this3","msgId","_props","status","createElement","className","onChange","handleChange","placeholder","onClick","sendEdict","replyEdict","cnt","renderCnt","Component","defaultProps","propTypes","PropTypes","func","headimgurl","string","nickname","openId","sourceOpenId","159","fetch","240","normalizeName","name","String","test","toLowerCase","normalizeValue","iteratorFor","items","iterator","next","shift","done","undefined","support","iterable","Symbol","Headers","map","append","getOwnPropertyNames","consumed","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","chars","Array","fromCharCode","join","bufferClone","slice","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","toString","arrayBuffer","isDataView","_bodyArrayBuffer","ArrayBuffer","isArrayBufferView","Error","get","type","rejected","text","decode","JSON","parse","normalizeMethod","upcased","toUpperCase","methods","indexOf","Request","input","options","mode","referrer","form","trim","split","bytes","replace","decodeURIComponent","parseHeaders","rawHeaders","line","parts","Response","bodyInit","ok","statusText","e","viewClasses","DataView","isView","oldValue","has","callback","thisArg","keys","values","entries","clone","redirectStatuses","redirect","RangeError","location","init","request","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill"],"mappings":"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","file":"5.CreateB.js","sourcesContent":["webpackJsonp([5],{\n\n/***/ 126:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(4);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactRouter = __webpack_require__(23);\n\t\n\tvar ReactRouter = _interopRequireWildcard(_reactRouter);\n\t\n\tvar _isomorphicFetch = __webpack_require__(159);\n\t\n\tvar _isomorphicFetch2 = _interopRequireDefault(_isomorphicFetch);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Link = ReactRouter.Link,\n\t    browserHistory = ReactRouter.browserHistory;\n\t\n\tvar CreateB = function (_React$Component) {\n\t  _inherits(CreateB, _React$Component);\n\t\n\t  function CreateB(props) {\n\t    _classCallCheck(this, CreateB);\n\t\n\t    var _this = _possibleConstructorReturn(this, (CreateB.__proto__ || Object.getPrototypeOf(CreateB)).call(this, props));\n\t\n\t    _this.funcName = ['handleChange', 'sendEdict', 'replyEdict'];\n\t    _this.funcName.forEach(function (funcName) {\n\t      _this[funcName] = _this[funcName].bind(_this);\n\t    });\n\t    return _this;\n\t  }\n\t\n\t  _createClass(CreateB, [{\n\t    key: 'componentWillUnmount',\n\t    value: function componentWillUnmount() {}\n\t  }, {\n\t    key: 'handleChange',\n\t    value: function handleChange(event) {\n\t      var msg = event.target.value;\n\t      msg = msg.substr(0, 50);\n\t      this.props.setState({ msg: msg });\n\t    }\n\t  }, {\n\t    key: 'sendEdict',\n\t    value: function sendEdict() {\n\t      var _this2 = this;\n\t\n\t      var self = this;\n\t      (0, _isomorphicFetch2.default)(window.apiPath + '/add' + window.apiSuffix, {\n\t        credentials: 'include',\n\t        method: 'POST',\n\t        headers: {\n\t          'Content-type': 'application/x-www-form-urlencoded;charset=UTF-8'\n\t        },\n\t        body: 'msg=' + self.props.msg\n\t      }).then(function (response) {\n\t        return response.json();\n\t      }).then(function (json) {\n\t        self.props.setState({\n\t          image: json.image,\n\t          shareUrl: json.shareUrl\n\t        }, function () {\n\t          var url = _this2.props.addParam('created');\n\t          browserHistory.push(url);\n\t        });\n\t      }).catch(function () {});\n\t    }\n\t  }, {\n\t    key: 'replyEdict',\n\t    value: function replyEdict(reply) {\n\t      var _this3 = this;\n\t\n\t      var self = this;\n\t      (0, _isomorphicFetch2.default)(window.apiPath + '/add' + window.apiSuffix, {\n\t        credentials: 'include',\n\t        method: 'POST',\n\t        headers: {\n\t          'Content-type': 'application/x-www-form-urlencoded;charset=UTF-8'\n\t        },\n\t        body: 'reply=' + reply + '&msg=' + self.props.msg + '&msgId=' + self.props.msgId\n\t      }).then(function (response) {\n\t        return response.json();\n\t      }).then(function (json) {\n\t        self.props.setState({\n\t          image: json.image,\n\t          shareUrl: json.shareUrl\n\t        }, function () {\n\t          var url = _this3.props.addParam('created');\n\t          browserHistory.push(url);\n\t        });\n\t      }).catch(function () {});\n\t    }\n\t  }, {\n\t    key: 'renderCnt',\n\t    value: function renderCnt() {\n\t      var _props = this.props,\n\t          addParam = _props.addParam,\n\t          status = _props.status;\n\t\n\t      if (status === 'create') {\n\t        return _react2.default.createElement(\n\t          'div',\n\t          { className: 'createb page' },\n\t          _react2.default.createElement(\n\t            'div',\n\t            { className: 'title' },\n\t            _react2.default.createElement(\n\t              'div',\n\t              { className: 'cnt' },\n\t              _react2.default.createElement('textarea', { onChange: this.handleChange, placeholder: '\\u70B9\\u51FB\\u8D77\\u8349\\u5723\\u65E8' })\n\t            )\n\t          ),\n\t          _react2.default.createElement(\n\t            'div',\n\t            { className: 'btn', onClick: this.sendEdict },\n\t            '\\u751F\\u6210\\u795D\\u798F'\n\t          )\n\t        );\n\t      } else if (status === 'reply') {\n\t        return _react2.default.createElement(\n\t          'div',\n\t          { className: 'replyc page' },\n\t          _react2.default.createElement(\n\t            'div',\n\t            { className: 'title' },\n\t            _react2.default.createElement(\n\t              'div',\n\t              { className: 'cnt' },\n\t              _react2.default.createElement('textarea', { onChange: this.handleChange, placeholder: '\\u70B9\\u6B64\\u590D\\u65E8' })\n\t            )\n\t          ),\n\t          _react2.default.createElement(\n\t            Link,\n\t            { className: 'btn', onClick: this.replyEdict.bind(this, 1) },\n\t            '\\u751F\\u6210'\n\t          )\n\t        );\n\t      }\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var cnt = this.renderCnt();\n\t      return cnt;\n\t    }\n\t  }]);\n\t\n\t  return CreateB;\n\t}(_react2.default.Component);\n\t\n\tCreateB.defaultProps = {};\n\t\n\tCreateB.propTypes = {\n\t  addParam: _react2.default.PropTypes.func,\n\t  headimgurl: _react2.default.PropTypes.string,\n\t  msg: _react2.default.PropTypes.string,\n\t  msgId: _react2.default.PropTypes.string,\n\t  nickname: _react2.default.PropTypes.string,\n\t  openId: _react2.default.PropTypes.string,\n\t  setState: _react2.default.PropTypes.func,\n\t  sourceOpenId: _react2.default.PropTypes.string,\n\t  status: _react2.default.PropTypes.string\n\t};\n\t\n\tmodule.exports = CreateB;\n\n/***/ },\n\n/***/ 159:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// the whatwg-fetch polyfill installs the fetch() function\n\t// on the global object (window or self)\n\t//\n\t// Return that as the export for use in Webpack, Browserify etc.\n\t__webpack_require__(240);\n\tmodule.exports = self.fetch.bind(self);\n\n\n/***/ },\n\n/***/ 240:\n/***/ function(module, exports) {\n\n\t(function(self) {\n\t  'use strict';\n\t\n\t  if (self.fetch) {\n\t    return\n\t  }\n\t\n\t  var support = {\n\t    searchParams: 'URLSearchParams' in self,\n\t    iterable: 'Symbol' in self && 'iterator' in Symbol,\n\t    blob: 'FileReader' in self && 'Blob' in self && (function() {\n\t      try {\n\t        new Blob()\n\t        return true\n\t      } catch(e) {\n\t        return false\n\t      }\n\t    })(),\n\t    formData: 'FormData' in self,\n\t    arrayBuffer: 'ArrayBuffer' in self\n\t  }\n\t\n\t  if (support.arrayBuffer) {\n\t    var viewClasses = [\n\t      '[object Int8Array]',\n\t      '[object Uint8Array]',\n\t      '[object Uint8ClampedArray]',\n\t      '[object Int16Array]',\n\t      '[object Uint16Array]',\n\t      '[object Int32Array]',\n\t      '[object Uint32Array]',\n\t      '[object Float32Array]',\n\t      '[object Float64Array]'\n\t    ]\n\t\n\t    var isDataView = function(obj) {\n\t      return obj && DataView.prototype.isPrototypeOf(obj)\n\t    }\n\t\n\t    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n\t      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n\t    }\n\t  }\n\t\n\t  function normalizeName(name) {\n\t    if (typeof name !== 'string') {\n\t      name = String(name)\n\t    }\n\t    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n\t      throw new TypeError('Invalid character in header field name')\n\t    }\n\t    return name.toLowerCase()\n\t  }\n\t\n\t  function normalizeValue(value) {\n\t    if (typeof value !== 'string') {\n\t      value = String(value)\n\t    }\n\t    return value\n\t  }\n\t\n\t  // Build a destructive iterator for the value list\n\t  function iteratorFor(items) {\n\t    var iterator = {\n\t      next: function() {\n\t        var value = items.shift()\n\t        return {done: value === undefined, value: value}\n\t      }\n\t    }\n\t\n\t    if (support.iterable) {\n\t      iterator[Symbol.iterator] = function() {\n\t        return iterator\n\t      }\n\t    }\n\t\n\t    return iterator\n\t  }\n\t\n\t  function Headers(headers) {\n\t    this.map = {}\n\t\n\t    if (headers instanceof Headers) {\n\t      headers.forEach(function(value, name) {\n\t        this.append(name, value)\n\t      }, this)\n\t\n\t    } else if (headers) {\n\t      Object.getOwnPropertyNames(headers).forEach(function(name) {\n\t        this.append(name, headers[name])\n\t      }, this)\n\t    }\n\t  }\n\t\n\t  Headers.prototype.append = function(name, value) {\n\t    name = normalizeName(name)\n\t    value = normalizeValue(value)\n\t    var oldValue = this.map[name]\n\t    this.map[name] = oldValue ? oldValue+','+value : value\n\t  }\n\t\n\t  Headers.prototype['delete'] = function(name) {\n\t    delete this.map[normalizeName(name)]\n\t  }\n\t\n\t  Headers.prototype.get = function(name) {\n\t    name = normalizeName(name)\n\t    return this.has(name) ? this.map[name] : null\n\t  }\n\t\n\t  Headers.prototype.has = function(name) {\n\t    return this.map.hasOwnProperty(normalizeName(name))\n\t  }\n\t\n\t  Headers.prototype.set = function(name, value) {\n\t    this.map[normalizeName(name)] = normalizeValue(value)\n\t  }\n\t\n\t  Headers.prototype.forEach = function(callback, thisArg) {\n\t    for (var name in this.map) {\n\t      if (this.map.hasOwnProperty(name)) {\n\t        callback.call(thisArg, this.map[name], name, this)\n\t      }\n\t    }\n\t  }\n\t\n\t  Headers.prototype.keys = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push(name) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.values = function() {\n\t    var items = []\n\t    this.forEach(function(value) { items.push(value) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.entries = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push([name, value]) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  if (support.iterable) {\n\t    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n\t  }\n\t\n\t  function consumed(body) {\n\t    if (body.bodyUsed) {\n\t      return Promise.reject(new TypeError('Already read'))\n\t    }\n\t    body.bodyUsed = true\n\t  }\n\t\n\t  function fileReaderReady(reader) {\n\t    return new Promise(function(resolve, reject) {\n\t      reader.onload = function() {\n\t        resolve(reader.result)\n\t      }\n\t      reader.onerror = function() {\n\t        reject(reader.error)\n\t      }\n\t    })\n\t  }\n\t\n\t  function readBlobAsArrayBuffer(blob) {\n\t    var reader = new FileReader()\n\t    var promise = fileReaderReady(reader)\n\t    reader.readAsArrayBuffer(blob)\n\t    return promise\n\t  }\n\t\n\t  function readBlobAsText(blob) {\n\t    var reader = new FileReader()\n\t    var promise = fileReaderReady(reader)\n\t    reader.readAsText(blob)\n\t    return promise\n\t  }\n\t\n\t  function readArrayBufferAsText(buf) {\n\t    var view = new Uint8Array(buf)\n\t    var chars = new Array(view.length)\n\t\n\t    for (var i = 0; i < view.length; i++) {\n\t      chars[i] = String.fromCharCode(view[i])\n\t    }\n\t    return chars.join('')\n\t  }\n\t\n\t  function bufferClone(buf) {\n\t    if (buf.slice) {\n\t      return buf.slice(0)\n\t    } else {\n\t      var view = new Uint8Array(buf.byteLength)\n\t      view.set(new Uint8Array(buf))\n\t      return view.buffer\n\t    }\n\t  }\n\t\n\t  function Body() {\n\t    this.bodyUsed = false\n\t\n\t    this._initBody = function(body) {\n\t      this._bodyInit = body\n\t      if (!body) {\n\t        this._bodyText = ''\n\t      } else if (typeof body === 'string') {\n\t        this._bodyText = body\n\t      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n\t        this._bodyBlob = body\n\t      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n\t        this._bodyFormData = body\n\t      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t        this._bodyText = body.toString()\n\t      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n\t        this._bodyArrayBuffer = bufferClone(body.buffer)\n\t        // IE 10-11 can't handle a DataView body.\n\t        this._bodyInit = new Blob([this._bodyArrayBuffer])\n\t      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n\t        this._bodyArrayBuffer = bufferClone(body)\n\t      } else {\n\t        throw new Error('unsupported BodyInit type')\n\t      }\n\t\n\t      if (!this.headers.get('content-type')) {\n\t        if (typeof body === 'string') {\n\t          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n\t        } else if (this._bodyBlob && this._bodyBlob.type) {\n\t          this.headers.set('content-type', this._bodyBlob.type)\n\t        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n\t        }\n\t      }\n\t    }\n\t\n\t    if (support.blob) {\n\t      this.blob = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return Promise.resolve(this._bodyBlob)\n\t        } else if (this._bodyArrayBuffer) {\n\t          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as blob')\n\t        } else {\n\t          return Promise.resolve(new Blob([this._bodyText]))\n\t        }\n\t      }\n\t\n\t      this.arrayBuffer = function() {\n\t        if (this._bodyArrayBuffer) {\n\t          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n\t        } else {\n\t          return this.blob().then(readBlobAsArrayBuffer)\n\t        }\n\t      }\n\t    }\n\t\n\t    this.text = function() {\n\t      var rejected = consumed(this)\n\t      if (rejected) {\n\t        return rejected\n\t      }\n\t\n\t      if (this._bodyBlob) {\n\t        return readBlobAsText(this._bodyBlob)\n\t      } else if (this._bodyArrayBuffer) {\n\t        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n\t      } else if (this._bodyFormData) {\n\t        throw new Error('could not read FormData body as text')\n\t      } else {\n\t        return Promise.resolve(this._bodyText)\n\t      }\n\t    }\n\t\n\t    if (support.formData) {\n\t      this.formData = function() {\n\t        return this.text().then(decode)\n\t      }\n\t    }\n\t\n\t    this.json = function() {\n\t      return this.text().then(JSON.parse)\n\t    }\n\t\n\t    return this\n\t  }\n\t\n\t  // HTTP methods whose capitalization should be normalized\n\t  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\t\n\t  function normalizeMethod(method) {\n\t    var upcased = method.toUpperCase()\n\t    return (methods.indexOf(upcased) > -1) ? upcased : method\n\t  }\n\t\n\t  function Request(input, options) {\n\t    options = options || {}\n\t    var body = options.body\n\t\n\t    if (typeof input === 'string') {\n\t      this.url = input\n\t    } else {\n\t      if (input.bodyUsed) {\n\t        throw new TypeError('Already read')\n\t      }\n\t      this.url = input.url\n\t      this.credentials = input.credentials\n\t      if (!options.headers) {\n\t        this.headers = new Headers(input.headers)\n\t      }\n\t      this.method = input.method\n\t      this.mode = input.mode\n\t      if (!body && input._bodyInit != null) {\n\t        body = input._bodyInit\n\t        input.bodyUsed = true\n\t      }\n\t    }\n\t\n\t    this.credentials = options.credentials || this.credentials || 'omit'\n\t    if (options.headers || !this.headers) {\n\t      this.headers = new Headers(options.headers)\n\t    }\n\t    this.method = normalizeMethod(options.method || this.method || 'GET')\n\t    this.mode = options.mode || this.mode || null\n\t    this.referrer = null\n\t\n\t    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n\t      throw new TypeError('Body not allowed for GET or HEAD requests')\n\t    }\n\t    this._initBody(body)\n\t  }\n\t\n\t  Request.prototype.clone = function() {\n\t    return new Request(this, { body: this._bodyInit })\n\t  }\n\t\n\t  function decode(body) {\n\t    var form = new FormData()\n\t    body.trim().split('&').forEach(function(bytes) {\n\t      if (bytes) {\n\t        var split = bytes.split('=')\n\t        var name = split.shift().replace(/\\+/g, ' ')\n\t        var value = split.join('=').replace(/\\+/g, ' ')\n\t        form.append(decodeURIComponent(name), decodeURIComponent(value))\n\t      }\n\t    })\n\t    return form\n\t  }\n\t\n\t  function parseHeaders(rawHeaders) {\n\t    var headers = new Headers()\n\t    rawHeaders.split('\\r\\n').forEach(function(line) {\n\t      var parts = line.split(':')\n\t      var key = parts.shift().trim()\n\t      if (key) {\n\t        var value = parts.join(':').trim()\n\t        headers.append(key, value)\n\t      }\n\t    })\n\t    return headers\n\t  }\n\t\n\t  Body.call(Request.prototype)\n\t\n\t  function Response(bodyInit, options) {\n\t    if (!options) {\n\t      options = {}\n\t    }\n\t\n\t    this.type = 'default'\n\t    this.status = 'status' in options ? options.status : 200\n\t    this.ok = this.status >= 200 && this.status < 300\n\t    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n\t    this.headers = new Headers(options.headers)\n\t    this.url = options.url || ''\n\t    this._initBody(bodyInit)\n\t  }\n\t\n\t  Body.call(Response.prototype)\n\t\n\t  Response.prototype.clone = function() {\n\t    return new Response(this._bodyInit, {\n\t      status: this.status,\n\t      statusText: this.statusText,\n\t      headers: new Headers(this.headers),\n\t      url: this.url\n\t    })\n\t  }\n\t\n\t  Response.error = function() {\n\t    var response = new Response(null, {status: 0, statusText: ''})\n\t    response.type = 'error'\n\t    return response\n\t  }\n\t\n\t  var redirectStatuses = [301, 302, 303, 307, 308]\n\t\n\t  Response.redirect = function(url, status) {\n\t    if (redirectStatuses.indexOf(status) === -1) {\n\t      throw new RangeError('Invalid status code')\n\t    }\n\t\n\t    return new Response(null, {status: status, headers: {location: url}})\n\t  }\n\t\n\t  self.Headers = Headers\n\t  self.Request = Request\n\t  self.Response = Response\n\t\n\t  self.fetch = function(input, init) {\n\t    return new Promise(function(resolve, reject) {\n\t      var request = new Request(input, init)\n\t      var xhr = new XMLHttpRequest()\n\t\n\t      xhr.onload = function() {\n\t        var options = {\n\t          status: xhr.status,\n\t          statusText: xhr.statusText,\n\t          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n\t        }\n\t        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n\t        var body = 'response' in xhr ? xhr.response : xhr.responseText\n\t        resolve(new Response(body, options))\n\t      }\n\t\n\t      xhr.onerror = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.ontimeout = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.open(request.method, request.url, true)\n\t\n\t      if (request.credentials === 'include') {\n\t        xhr.withCredentials = true\n\t      }\n\t\n\t      if ('responseType' in xhr && support.blob) {\n\t        xhr.responseType = 'blob'\n\t      }\n\t\n\t      request.headers.forEach(function(value, name) {\n\t        xhr.setRequestHeader(name, value)\n\t      })\n\t\n\t      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n\t    })\n\t  }\n\t  self.fetch.polyfill = true\n\t})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// 5.CreateB.js","import React from 'react';\nimport * as ReactRouter from 'react-router';\nimport fetch from 'isomorphic-fetch';\n\nconst {Link, browserHistory} = ReactRouter;\n\nclass CreateB extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.funcName = ['handleChange', 'sendEdict', 'replyEdict'];\n    this.funcName.forEach(funcName => {\n      this[funcName] = this[funcName].bind(this);\n    });\n  }\n\n  componentWillUnmount() {\n\n  }\n\n  handleChange(event) {\n    let msg = event.target.value;\n    msg = msg.substr(0, 50);\n    this.props.setState({msg});\n  }\n\n  sendEdict() {\n    const self = this;\n    fetch(`${window.apiPath}/add${window.apiSuffix}`, {\n      credentials: 'include',\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/x-www-form-urlencoded;charset=UTF-8'\n      },\n      body: `msg=${self.props.msg}`\n    })\n      .then(response => response.json())\n      .then(json => {\n        self.props.setState({\n          image: json.image,\n          shareUrl: json.shareUrl\n        }, () => {\n          const url = this.props.addParam('created');\n          browserHistory.push(url);\n        });\n      })\n      .catch(() => {\n\n      });\n  }\n\n  replyEdict(reply) {\n    const self = this;\n    fetch(`${window.apiPath}/add${window.apiSuffix}`, {\n      credentials: 'include',\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/x-www-form-urlencoded;charset=UTF-8'\n      },\n      body: `reply=${reply}&msg=${self.props.msg}&msgId=${self.props.msgId}`\n    })\n      .then(response => response.json())\n      .then(json => {\n        self.props.setState({\n          image: json.image,\n          shareUrl: json.shareUrl\n        }, () => {\n          const url = this.props.addParam('created');\n          browserHistory.push(url);\n        });\n      })\n      .catch(() => {\n\n      });\n  }\n\n  renderCnt() {\n    const {addParam, status} = this.props;\n    if (status === 'create') {\n      return (\n          <div className=\"createb page\">\n            <div className=\"title\">\n              <div className=\"cnt\">\n                <textarea onChange={this.handleChange} placeholder=\"点击起草圣旨\"></textarea>\n              </div>\n            </div>\n            <div className=\"btn\" onClick={this.sendEdict}>生成祝福</div>\n          </div>\n      );\n    } else if (status === 'reply') {\n      return (\n          <div className=\"replyc page\">\n            <div className=\"title\">\n              <div className=\"cnt\">\n                <textarea onChange={this.handleChange} placeholder=\"点此复旨\" ></textarea>\n              </div>\n            </div>\n            <Link className=\"btn\" onClick={this.replyEdict.bind(this, 1)}>生成</Link>\n          </div>\n      );\n    }\n  }\n\n  render() {\n    const cnt = this.renderCnt();\n    return cnt;\n  }\n}\n\nCreateB.defaultProps = {\n\n};\n\nCreateB.propTypes = {\n  addParam: React.PropTypes.func,\n  headimgurl: React.PropTypes.string,\n  msg: React.PropTypes.string,\n  msgId: React.PropTypes.string,\n  nickname: React.PropTypes.string,\n  openId: React.PropTypes.string,\n  setState: React.PropTypes.func,\n  sourceOpenId: React.PropTypes.string,\n  status: React.PropTypes.string\n};\n\nmodule.exports = CreateB;\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/CreateB/components/index.js","// the whatwg-fetch polyfill installs the fetch() function\n// on the global object (window or self)\n//\n// Return that as the export for use in Webpack, Browserify etc.\nrequire('whatwg-fetch');\nmodule.exports = self.fetch.bind(self);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/isomorphic-fetch/fetch-npm-browserify.js\n// module id = 159\n// module chunks = 5","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (typeof input === 'string') {\n      this.url = input\n    } else {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split('\\r\\n').forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/whatwg-fetch/fetch.js\n// module id = 240\n// module chunks = 5"],"sourceRoot":""}